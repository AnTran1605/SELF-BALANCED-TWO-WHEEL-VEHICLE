#include <Wire.h>
#include <Adafruit_MPU6050.h>
#include <U8g2lib.h>
#include <SimpleKalmanFilter.h> // Thư viện Kalman

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Adafruit_MPU6050 mpu; // Khởi tạo đối tượng MPU6050

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Khởi tạo màn hình OLED sử dụng U8g2lib
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE, /* clock=*/ 22, /* data=*/ 21);

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//OFFSET của Acc X và Acc Y
float offsetAccX = 0.31;
float offsetAccY = -0.38;
float accX, accY;

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Biến để tính toán thời gian trôi qua
unsigned long lastTime = 0;  // Thời gian của lần đọc trước
float dt = 0.0;  // Thời gian trôi qua (delta time)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


// Biến tính toán
SimpleKalmanFilter kalmanFilter(1,0.5 , 0.1); // Khởi tạo Kalman Filter (measurement noise, process noise, dt)
float angleAcc;     // Góc nghiêng tính từ gia tốc kế
float angleGyro = 0; // Góc nghiêng tính từ con quay hồi chuyển
float angleFiltered; // Góc nghiêng sau khi lọc Kalman

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void readMPU6050(sensors_event_t &a, sensors_event_t &g, sensors_event_t &temp) 
    {
      mpu.getEvent(&a, &g, &temp);  // Đọc dữ liệu cảm biến
    
      accX = a.acceleration.x - offsetAccX;
      accY = a.acceleration.y - offsetAccY;
      
      // Tính góc từ gia tốc kế và con quay hồi chuyển
      angleAcc = atan2(accX, a.acceleration.z) * 180.0 / PI;  // Góc từ gia tốc kế
      angleGyro += g.gyro.x * dt;  // Góc từ con quay hồi chuyển
    
      // Lọc góc bằng Kalman Filter
      angleFiltered = kalmanFilter.updateEstimate(angleAcc);  // Sử dụng phương thức updateEstimate() của Kalman Filter
    }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void displayDataOnOLED() 
    {
      u8g2.clearBuffer(); // Xóa bộ đệm màn hình
    
      // Hiển thị góc nghiêng sau khi lọc
      u8g2.setCursor(0, 10);
      u8g2.print(F("Filtered Angle: "));
      u8g2.print(angleFiltered, 1);
      u8g2.print(F(" deg"));
    
      // Hiển thị góc từ các nguồn
      u8g2.setCursor(0, 20);
      u8g2.print(F("Acc Angle: "));
      u8g2.print(angleAcc, 1);
      u8g2.print(F(" deg"));
    
      u8g2.setCursor(0, 30);
      u8g2.print(F("Gyro Angle: "));
      u8g2.print(angleGyro, 1);
      u8g2.print(F(" deg"));
    
      u8g2.sendBuffer(); // Cập nhật màn hình
    }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void displayDataOnSerial() 
    {
      Serial.print("Filtered Angle: ");
      Serial.print(angleFiltered);
      Serial.println(" deg");
    
      Serial.print("Acc Angle: ");
      Serial.print(angleAcc);
      Serial.println(" deg");
    
      Serial.print("Gyro Angle: ");
      Serial.print(angleGyro);
      Serial.println(" deg");
    }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void setup() 
    {
      Serial.begin(115200); // Khởi tạo giao tiếp Serial
    
      // Khởi tạo màn hình OLED
      u8g2.begin();
    
      // Kiểm tra cảm biến MPU6050
      if (!mpu.begin()) 
        {
          Serial.println(F("MPU6050 không kết nối"));
          while (1); // Dừng chương trình nếu không kết nối được với MPU6050
        }
    
      u8g2.clearBuffer();
      u8g2.setFont(u8g2_font_ncenB08_tr);
      u8g2.sendBuffer();  
    
      lastTime = millis(); // Khởi tạo thời gian ban đầu
    }

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void loop() 
    {
      unsigned long currentMillis = millis();
      float dt = (currentMillis - lastTime) / 1000.0; // Tính toán thời gian trôi qua (s)
    
      sensors_event_t a, g, temp;
    
      // Gọi các hàm để thực hiện các nhiệm vụ cụ thể
      readMPU6050(a, g, temp);      // Đọc dữ liệu cảm biến và tính toán góc
      Serial.print("X: "); Serial.print(a.acceleration.x); Serial.print(" m/s^2, ");
      displayDataOnOLED();          // Hiển thị dữ liệu lên OLED
      displayDataOnSerial();        // Hiển thị dữ liệu lên Serial
    
      lastTime = currentMillis; // Cập nhật thời gian đọc mới nhất
    
      delay(10); // Đợi 10ms
    }
